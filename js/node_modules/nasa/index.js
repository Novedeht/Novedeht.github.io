
/*

       *  Nasa image search module  *
               By thedevon

         https://images.nasa.gov/#/

              (just for fun)

*/

var request = require('request');
var root = 'https://images-api.nasa.gov/search?'; //Endpoint for image searching
var parameters = [ //All searchable parameters
    'q', // Free text search terms to compare to all indexed metadata.
    'center', // NASA center which published the media.
    'description', // Terms to search for in “Description” fields.
    'keywords', // Terms to search for in “Keywords” fields. Separate multiple values with commas.
    'location', // Terms to search for in “Location” fields.
    'media_type', // Media types to restrict the search to. Available types: image, audio.
    'nasa_id', // The media asset’s NASA ID.
    'photographer', // The primary photographer’s name.
    'secondary_creator', // A secondary photographer/videographer’s name.
    'title', // Terms to search for in “Title” fields.
    'year_start', // The start year for results. Format: YYYY.
    'year_end' // The end year for results. Format: YYYY.
]

// https://images.nasa.gov/docs/images.nasa.gov_api_docs.pdf

var nasa = {
    search: function (query, callback) {
        var param = []
        var erro;
        // making valid link
        for (var parameter in query) {
            if (parameters.indexOf(parameter) > -1) {
                param.push(parameter + '=' + encodeURIComponent(query[parameter]))
            } else {
                throw parameter + ' is not a valid parameter.';
            }
        }
        //requesting link
        request.get({
            url: root + param.join('&'),
            json: true,
            headers: { 'User-Agent': 'request' }
        }, (err, res, data) => {
            if (err) {
                erro = 'Error: ', err;
            } else if (res.statusCode !== 200) {
                erro = 'Bad status code: ', res.statusCode;
            } else {
                //returning JSON array of all items
                if (data.collection.items.length > 0) {
                    callback(data.collection.items, erro);
                } else {
                    erro = 'Error, Nothing was found'
                    callback(data.collection.items, erro);
                }
            }
        });
    }
}
// export for use everywhere!
module.exports = nasa;